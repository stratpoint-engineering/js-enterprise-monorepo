version: '3.8'

services:
  # MongoDB database
  mongo:
    image: mongo:6
    container_name: enterprise-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-enterprise_db}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - enterprise-network

  # Backend service
  backend:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.backend
    container_name: enterprise-backend
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-password}@mongo:27017/${MONGO_INITDB_DATABASE:-enterprise_db}?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-mysecretkey}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-myrefreshsecretkey}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
    ports:
      - "3001:3001"
    volumes:
      - ../../apps/backend:/app/apps/backend
      - ../../packages:/app/packages
      - /app/node_modules
      - /app/apps/backend/node_modules
    networks:
      - enterprise-network

  # Frontend service
  frontend:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.frontend
    container_name: enterprise-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - API_BASE_URL=http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - ../../apps/frontend:/app/apps/frontend
      - ../../packages:/app/packages
      - /app/node_modules
      - /app/apps/frontend/node_modules
    networks:
      - enterprise-network

  # Development utilities
  prometheus:
    image: prom/prometheus
    container_name: enterprise-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../../infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - enterprise-network

  grafana:
    image: grafana/grafana
    container_name: enterprise-grafana
    restart: unless-stopped
    ports:
      - "3100:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    networks:
      - enterprise-network

networks:
  enterprise-network:
    driver: bridge

volumes:
  mongo-data:
  grafana-data:

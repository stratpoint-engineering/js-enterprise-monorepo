apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: enterprise-monorepo-template
  title: Enterprise Monorepo Architecture
  description: A production-ready monorepo architecture for TypeScript and ES6 JavaScript projects
  tags:
    - typescript
    - javascript
    - monorepo
    - nextjs
    - nestjs
    - turborepo
spec:
  owner: ${{values.owner | default('platform-team')}}
  type: monorepo

  parameters:
    - title: Provide project information
      required:
        - github_org
        - github_repo
        - owner
      properties:
        github_org:
          title: GitHub Organization
          type: string
          description: GitHub organization where the repository will be created
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: Group
        github_repo:
          title: Repository Name
          type: string
          description: Name of the repository
          default: enterprise-monorepo
        owner:
          title: Owner
          type: string
          description: Owner of the project
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User
        system:
          title: System
          type: string
          description: System this service belongs to
          default: enterprise-platform
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind: System

    - title: Configure applications
      properties:
        frontend_name:
          title: Frontend App Name
          type: string
          description: Name of the frontend application
          default: frontend
        backend_name:
          title: Backend App Name
          type: string
          description: Name of the backend application
          default: backend
        use_database:
          title: Database Setup
          type: string
          description: Choose the database type for the backend
          enum:
            - MongoDB
            - PostgreSQL
            - None
          default: MongoDB
        use_auth:
          title: Authentication
          type: boolean
          description: Set up authentication system
          default: true

  steps:
    - id: template
      name: Fetch Template
      action: fetch:template
      input:
        url: ./
        copyWithoutRender:
          - .yarn/**/*
          - yarn.lock
        values:
          github_org: ${{ parameters.github_org }}
          github_repo: ${{ parameters.github_repo }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          frontend_name: ${{ parameters.frontend_name }}
          backend_name: ${{ parameters.backend_name }}
          use_database: ${{ parameters.use_database }}
          use_auth: ${{ parameters.use_auth }}

    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: A production-ready monorepo architecture for enterprise applications
        repoUrl: github.com?owner=${{ parameters.github_org }}&repo=${{ parameters.github_repo }}
        defaultBranch: main
        protectDefaultBranch: true

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
